name: Build Binaries

on:
  push:
    branches: [master, develop]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - 'Makefile'
      - '.github/workflows/build-binaries.yml'
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          # macOS builds
          - os: darwin
            arch: amd64
            runner: macos-latest
            goos: darwin
            goarch: amd64
          - os: darwin
            arch: arm64
            runner: macos-latest
            goos: darwin
            goarch: arm64

          # Linux builds
          - os: linux
            arch: amd64
            runner: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: linux
            arch: arm64
            runner: ubuntu-latest
            goos: linux
            goarch: arm64

          # Windows build
          - os: windows
            arch: amd64
            runner: windows-latest
            goos: windows
            goarch: amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper commits

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Linux dependencies
        if: matrix.os == 'linux'
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" = "windows" ]; then
            go build -o dist/claude-notifications-${{ matrix.os }}-${{ matrix.arch }}.exe ./cmd/claude-notifications
          else
            go build -o dist/claude-notifications-${{ matrix.os }}-${{ matrix.arch }} ./cmd/claude-notifications
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/*
          retention-days: 7

  commit:
    name: Commit binaries to repository
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move binaries to bin/
        run: |
          mkdir -p bin
          find artifacts -type f -name 'claude-notifications-*' -exec cp {} bin/ \;
          ls -lh bin/

      - name: Commit and push binaries
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          git add bin/claude-notifications-*

          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: rebuild binaries for all platforms [skip ci]"
            git push
          fi
